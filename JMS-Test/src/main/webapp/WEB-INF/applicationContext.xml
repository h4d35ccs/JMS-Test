<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.ncr.ATMMonitoring">
	    <context:exclude-filter expression="org.springframework.stereotype.Controller"
	        type="annotation"/>
    </context:component-scan>

	<!-- <bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
	  <property name="location">
	    <value>classpath:config.properties</value>
	  </property>
	  <property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
 -->
	<!-- <bean id="jdbcConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
	  <property name="location">
	    <value>classpath:jdbc.properties</value>
	  </property>
	  <property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean> -->

   <!--  <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" /> -->

 <!--    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.ncr.ATMMonitoring.pojo"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${jdbc.hbm2ddl}</prop>
                <prop key="hibernate.default_schema">${jdbc.default_schema}</prop>
                <prop key="hibernate.show_sql">${jdbc.show_sql}</prop>
                <prop key="hibernate.format_sql">${jdbc.format_sql}</prop>
                <prop key="hibernate.order_updates">${jdbc.order_updates}</prop>
            </props>
        </property>
    </bean> -->

    <tx:annotation-driven />
   <!--  <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean> -->


	<task:executor id="myExecutor" pool-size="10" />
	<task:scheduler id="myScheduler" pool-size="5" />
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
   <!--  
    
     <bean id="brokerOutcoming" class="org.apache.activemq.broker.BrokerService"
		init-method="start" destroy-method="stop">
		<property name="brokerName" value="outgoingBroker" />
		<property name="persistent" value="true" />
		<property name="transportConnectorURIs">
			<list>
				<value>tcp://153.57.97.112:61617</value>
			</list>
		</property>
	</bean>
	
	 <bean id="brokerIncoming" class="org.apache.activemq.broker.BrokerService"
		init-method="start" destroy-method="stop">
		<property name="brokerName" value="incomingBroker" />
		<property name="persistent" value="true" />
		<property name="transportConnectorURIs">
			<list>
				<value></value>
			</list>
		</property>
	</bean>
	
	<bean id="outgoingTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="outgoingTopic"/>
	</bean> -->
</beans>
